{
  "_version": "4.4.6",
  "_v8": "4.5.103.36",
  "_successful": 295,
  "_count": 668,
  "_percent": 0.4416167664670659,
  "optimisation›proper tail calls (tail call optimisation)›direct recursion": "Maximum call stack size exceeded",
  "optimisation›proper tail calls (tail call optimisation)›mutual recursion": "Maximum call stack size exceeded",
  "syntax›default function parameters›basic functionality": "Unexpected token =",
  "syntax›default function parameters›explicit undefined defers to the default": "Unexpected token =",
  "syntax›default function parameters›defaults can refer to previous params": "Unexpected token =",
  "syntax›default function parameters›arguments object interaction": "Unexpected token =",
  "syntax›default function parameters›temporal dead zone": "Unexpected token =",
  "syntax›default function parameters›separate scope": "Unexpected token =",
  "syntax›default function parameters›new Function() support": "Unexpected token =",
  "syntax›rest parameters›basic functionality": "Unexpected token ...",
  "syntax›rest parameters›function 'length' property": "Unexpected token ...",
  "syntax›rest parameters›arguments object interaction": "Unexpected token ...",
  "syntax›rest parameters›can't be used in setters": "Unexpected token ...",
  "syntax›rest parameters›new Function() support": "Unexpected token ...",
  "syntax›spread (...) operator›with arrays, in function calls": "Unexpected token ...",
  "syntax›spread (...) operator›with arrays, in array literals": "Unexpected token ...",
  "syntax›spread (...) operator›with sparse arrays, in function calls": "Unexpected token ...",
  "syntax›spread (...) operator›with sparse arrays, in array literals": "Unexpected token ...",
  "syntax›spread (...) operator›with strings, in function calls": "Unexpected token ...",
  "syntax›spread (...) operator›with strings, in array literals": "Unexpected token ...",
  "syntax›spread (...) operator›with astral plane strings, in function calls": "Unexpected token ...",
  "syntax›spread (...) operator›with astral plane strings, in array literals": "Unexpected token ...",
  "syntax›spread (...) operator›with generator instances, in calls": "Unexpected token ...",
  "syntax›spread (...) operator›with generator instances, in arrays": "Unexpected token ...",
  "syntax›spread (...) operator›with generic iterables, in calls": "Unexpected token ...",
  "syntax›spread (...) operator›with generic iterables, in arrays": "Unexpected token ...",
  "syntax›spread (...) operator›with instances of iterables, in calls": "Unexpected token ...",
  "syntax›spread (...) operator›with instances of iterables, in arrays": "Unexpected token ...",
  "syntax›spread (...) operator›spreading non-iterables is a runtime error": "Unexpected token ...",
  "syntax›object literal extensions›computed properties": true,
  "syntax›object literal extensions›shorthand properties": true,
  "syntax›object literal extensions›shorthand methods": true,
  "syntax›object literal extensions›string-keyed shorthand methods": true,
  "syntax›object literal extensions›computed shorthand methods": true,
  "syntax›object literal extensions›computed accessors": true,
  "syntax›for..of loops›with arrays": true,
  "syntax›for..of loops›with sparse arrays": true,
  "syntax›for..of loops›with strings": true,
  "syntax›for..of loops›with astral plane strings": true,
  "syntax›for..of loops›with generator instances": true,
  "syntax›for..of loops›with generic iterables": true,
  "syntax›for..of loops›with instances of generic iterables": true,
  "syntax›for..of loops›iterator closing, break": false,
  "syntax›for..of loops›iterator closing, throw": false,
  "syntax›octal and binary literals›octal literals": true,
  "syntax›octal and binary literals›binary literals": true,
  "syntax›octal and binary literals›octal supported by Number()": true,
  "syntax›octal and binary literals›binary supported by Number()": true,
  "syntax›template literals›basic functionality": false,
  "syntax›template literals›toString conversion": true,
  "syntax›template literals›tagged template literals": true,
  "syntax›template literals›passed array is frozen": true,
  "syntax›template literals›line break normalisation": true,
  "syntax›RegExp \"y\" and \"u\" flags›\"y\" flag": "Invalid flags supplied to RegExp constructor 'y'",
  "syntax›RegExp \"y\" and \"u\" flags›\"y\" flag, lastIndex": "Invalid flags supplied to RegExp constructor 'y'",
  "syntax›RegExp \"y\" and \"u\" flags›\"u\" flag": "Invalid flags supplied to RegExp constructor 'u'",
  "syntax›RegExp \"y\" and \"u\" flags›\"u\" flag, Unicode code point escapes": "Invalid flags supplied to RegExp constructor 'u'",
  "syntax›RegExp \"y\" and \"u\" flags›\"u\" flag, case folding": "Invalid flags supplied to RegExp constructor 'iu'",
  "syntax›destructuring, declarations›with arrays": "Unexpected token [",
  "syntax›destructuring, declarations›with sparse arrays": "Unexpected token [",
  "syntax›destructuring, declarations›with strings": "Unexpected token [",
  "syntax›destructuring, declarations›with astral plane strings": "Unexpected token [",
  "syntax›destructuring, declarations›with generator instances": "Unexpected token [",
  "syntax›destructuring, declarations›with generic iterables": "Unexpected token [",
  "syntax›destructuring, declarations›with instances of generic iterables": "Unexpected token [",
  "syntax›destructuring, declarations›iterator closing": "Unexpected token [",
  "syntax›destructuring, declarations›trailing commas in iterable patterns": "Unexpected token [",
  "syntax›destructuring, declarations›with objects": "Unexpected token {",
  "syntax›destructuring, declarations›object destructuring with primitives": "Unexpected token {",
  "syntax›destructuring, declarations›trailing commas in object patterns": "Unexpected token {",
  "syntax›destructuring, declarations›throws on null and undefined": "Unexpected token {",
  "syntax›destructuring, declarations›computed properties": "Unexpected token {",
  "syntax›destructuring, declarations›multiples in a single var statement": "Unexpected token [",
  "syntax›destructuring, declarations›nested": "Unexpected token [",
  "syntax›destructuring, declarations›in for-in loop heads": "Unexpected token [",
  "syntax›destructuring, declarations›in for-of loop heads": "Unexpected token [",
  "syntax›destructuring, declarations›in catch heads": "Unexpected token [",
  "syntax›destructuring, declarations›rest": "Unexpected token [",
  "syntax›destructuring, declarations›defaults": "Unexpected token {",
  "syntax›destructuring, declarations›defaults, let temporal dead zone": "Unexpected token {",
  "syntax›destructuring, assignment›with arrays": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with sparse arrays": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with strings": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with astral plane strings": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with generator instances": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with generic iterables": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with instances of generic iterables": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›iterator closing": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›iterable destructuring expression": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›chained iterable destructuring": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›trailing commas in iterable patterns": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›with objects": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›object destructuring with primitives": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›trailing commas in object patterns": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›object destructuring expression": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›parenthesised left-hand-side is a syntax error": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›chained object destructuring": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›throws on null and undefined": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›computed properties": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›nested": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›rest": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›nested rest": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›empty patterns": "Invalid left-hand side in assignment",
  "syntax›destructuring, assignment›defaults": "Invalid left-hand side in assignment",
  "syntax›destructuring, parameters›with arrays": "Unexpected token [",
  "syntax›destructuring, parameters›with sparse arrays": "Unexpected token [",
  "syntax›destructuring, parameters›with strings": "Unexpected token [",
  "syntax›destructuring, parameters›with astral plane strings": "Unexpected token [",
  "syntax›destructuring, parameters›with generator instances": "Unexpected token [",
  "syntax›destructuring, parameters›with generic iterables": "Unexpected token [",
  "syntax›destructuring, parameters›with instances of generic iterables": "Unexpected token [",
  "syntax›destructuring, parameters›iterator closing": "Unexpected token [",
  "syntax›destructuring, parameters›trailing commas in iterable patterns": "Unexpected token [",
  "syntax›destructuring, parameters›with objects": "Unexpected token {",
  "syntax›destructuring, parameters›object destructuring with primitives": "Unexpected token {",
  "syntax›destructuring, parameters›trailing commas in object patterns": "Unexpected token {",
  "syntax›destructuring, parameters›throws on null and undefined": "Unexpected token {",
  "syntax›destructuring, parameters›computed properties": "Unexpected token {",
  "syntax›destructuring, parameters›nested": "Unexpected token [",
  "syntax›destructuring, parameters›'arguments' interaction": "Unexpected token {",
  "syntax›destructuring, parameters›new Function() support": "Unexpected token {",
  "syntax›destructuring, parameters›in parameters, function 'length' property": "Unexpected token {",
  "syntax›destructuring, parameters›rest": "Unexpected token [",
  "syntax›destructuring, parameters›empty patterns": "Unexpected token [",
  "syntax›destructuring, parameters›defaults": "Unexpected token {",
  "syntax›destructuring, parameters›defaults, separate scope": "Unexpected token {",
  "syntax›destructuring, parameters›defaults, new Function() support": "Unexpected token {",
  "syntax›Unicode code point escapes›in strings": true,
  "syntax›Unicode code point escapes›in identifiers": true,
  "syntax›new.target›in constructors": "Unexpected token .",
  "syntax›new.target›assignment is an early error": "Unexpected token .",
  "bindings›const›basic support": true,
  "bindings›const›is block-scoped": "Identifier 'bar' has already been declared",
  "bindings›const›cannot be in statements": false,
  "bindings›const›redefining a const is an error": false,
  "bindings›const›for loop statement scope": "Identifier 'baz' has already been declared",
  "bindings›const›for-in loop iteration scope": true,
  "bindings›const›for-of loop iteration scope": true,
  "bindings›const›temporal dead zone": true,
  "bindings›const›basic support (strict mode)": true,
  "bindings›const›is block-scoped (strict mode)": true,
  "bindings›const›cannot be in statements (strict mode)": true,
  "bindings›const›redefining a const (strict mode)": true,
  "bindings›const›for loop statement scope (strict mode)": true,
  "bindings›const›for-in loop iteration scope (strict mode)": true,
  "bindings›const›for-of loop iteration scope (strict mode)": true,
  "bindings›const›temporal dead zone (strict mode)": true,
  "bindings›let›basic support": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "bindings›let›is block-scoped": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "bindings›let›cannot be in statements": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "bindings›let›for loop statement scope": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "bindings›let›temporal dead zone": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "bindings›let›for/for-in loop iteration scope": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "bindings›let›basic support (strict mode)": true,
  "bindings›let›is block-scoped (strict mode)": true,
  "bindings›let›cannot be in statements (strict mode)": true,
  "bindings›let›for loop statement scope (strict mode)": true,
  "bindings›let›temporal dead zone (strict mode)": true,
  "bindings›let›for/for-in loop iteration scope (strict mode)": true,
  "bindings›block-level function declaration": true,
  "functions›arrow functions›0 parameters": true,
  "functions›arrow functions›1 parameter, no brackets": true,
  "functions›arrow functions›multiple parameters": true,
  "functions›arrow functions›lexical \"this\" binding": true,
  "functions›arrow functions›\"this\" unchanged by call or apply": true,
  "functions›arrow functions›can't be bound, can be curried": true,
  "functions›arrow functions›lexical \"arguments\" binding": true,
  "functions›arrow functions›no line break between params and <code>=></code>": true,
  "functions›arrow functions›correct precedence": false,
  "functions›arrow functions›no \"prototype\" property": true,
  "functions›arrow functions›lexical \"super\" binding in constructors": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›arrow functions›lexical \"super\" binding in methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›arrow functions›lexical \"new.target\" binding": "Unexpected token .",
  "functions›class›class statement": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›is block-scoped": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›class expression": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›anonymous class": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›constructor": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›prototype methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›string-keyed methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›computed prototype methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›optional semicolons": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›static methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›computed static methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›accessor properties": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›computed accessor properties": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›static accessor properties": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›computed static accessor properties": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›class name is lexically scoped": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›computed names, temporal dead zone": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›methods aren't enumerable": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›implicit strict mode": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›constructor requires new": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›extends": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›extends expressions": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›extends null": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›class›new.target": "Unexpected token .",
  "functions›super›statement in constructors": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›expression in constructors": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›in methods, property access": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›in methods, method calls": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›method calls use correct \"this\" binding": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›constructor calls use correct \"new.target\" binding": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›is statically bound": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›super›super() invokes the correct constructor": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›generators›basic functionality": true,
  "functions›generators›generator function expressions": true,
  "functions›generators›correct \"this\" binding": true,
  "functions›generators›can't use \"this\" with new": false,
  "functions›generators›sending": true,
  "functions›generators›%GeneratorPrototype%": true,
  "functions›generators›%GeneratorPrototype% prototype chain": true,
  "functions›generators›%GeneratorPrototype%.constructor": true,
  "functions›generators›%GeneratorPrototype%.throw": true,
  "functions›generators›%GeneratorPrototype%.return": "iterator.return is not a function",
  "functions›generators›yield operator precedence": true,
  "functions›generators›yield *, arrays": true,
  "functions›generators›yield *, sparse arrays": true,
  "functions›generators›yield *, strings": true,
  "functions›generators›yield *, astral plane strings": true,
  "functions›generators›yield *, generator instances": true,
  "functions›generators›yield *, generic iterables": true,
  "functions›generators›yield *, instances of iterables": true,
  "functions›generators›yield * on non-iterables is a runtime error": true,
  "functions›generators›yield *, iterator closing": "gen.return is not a function",
  "functions›generators›yield *, iterator closing via throw()": false,
  "functions›generators›shorthand generator methods": true,
  "functions›generators›string-keyed shorthand generator methods": true,
  "functions›generators›computed shorthand generators": true,
  "functions›generators›shorthand generator methods, classes": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›generators›computed shorthand generators, classes": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "functions›generators›shorthand generators can't be constructors": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-ins›typed arrays›Int8Array": true,
  "built-ins›typed arrays›Uint8Array": true,
  "built-ins›typed arrays›Uint8ClampedArray": true,
  "built-ins›typed arrays›Int16Array": true,
  "built-ins›typed arrays›Uint16Array": true,
  "built-ins›typed arrays›Int32Array": true,
  "built-ins›typed arrays›Uint32Array": true,
  "built-ins›typed arrays›Float32Array": true,
  "built-ins›typed arrays›Float64Array": true,
  "built-ins›typed arrays›DataView (Int8)": true,
  "built-ins›typed arrays›DataView (Uint8)": true,
  "built-ins›typed arrays›DataView (Int16)": true,
  "built-ins›typed arrays›DataView (Uint16)": true,
  "built-ins›typed arrays›DataView (Int32)": true,
  "built-ins›typed arrays›DataView (Uint32)": true,
  "built-ins›typed arrays›DataView (Float32)": true,
  "built-ins›typed arrays›DataView (Float64)": true,
  "built-ins›typed arrays›ArrayBuffer[Symbol.species]": false,
  "built-ins›typed arrays›constructors require new": true,
  "built-ins›typed arrays›constructors accept generic iterables": true,
  "built-ins›typed arrays›correct prototype chains": false,
  "built-ins›typed arrays›%TypedArray%.from": true,
  "built-ins›typed arrays›%TypedArray%.of": true,
  "built-ins›typed arrays›%TypedArray%.prototype.subarray": true,
  "built-ins›typed arrays›%TypedArray%.prototype.join": true,
  "built-ins›typed arrays›%TypedArray%.prototype.indexOf": true,
  "built-ins›typed arrays›%TypedArray%.prototype.lastIndexOf": true,
  "built-ins›typed arrays›%TypedArray%.prototype.slice": true,
  "built-ins›typed arrays›%TypedArray%.prototype.every": true,
  "built-ins›typed arrays›%TypedArray%.prototype.filter": true,
  "built-ins›typed arrays›%TypedArray%.prototype.forEach": true,
  "built-ins›typed arrays›%TypedArray%.prototype.map": true,
  "built-ins›typed arrays›%TypedArray%.prototype.reduce": true,
  "built-ins›typed arrays›%TypedArray%.prototype.reduceRight": true,
  "built-ins›typed arrays›%TypedArray%.prototype.reverse": true,
  "built-ins›typed arrays›%TypedArray%.prototype.some": true,
  "built-ins›typed arrays›%TypedArray%.prototype.sort": true,
  "built-ins›typed arrays›%TypedArray%.prototype.copyWithin": true,
  "built-ins›typed arrays›%TypedArray%.prototype.find": true,
  "built-ins›typed arrays›%TypedArray%.prototype.findIndex": true,
  "built-ins›typed arrays›%TypedArray%.prototype.fill": true,
  "built-ins›typed arrays›%TypedArray%.prototype.keys": true,
  "built-ins›typed arrays›%TypedArray%.prototype.values": true,
  "built-ins›typed arrays›%TypedArray%.prototype.entries": true,
  "built-ins›typed arrays›%TypedArray%.prototype[Symbol.iterator]": true,
  "built-ins›typed arrays›%TypedArray%[Symbol.species]": false,
  "built-ins›Map›basic functionality": true,
  "built-ins›Map›constructor arguments": true,
  "built-ins›Map›constructor requires new": true,
  "built-ins›Map›constructor accepts null": true,
  "built-ins›Map›constructor invokes set": true,
  "built-ins›Map›iterator closing": false,
  "built-ins›Map›Map.prototype.set returns this": true,
  "built-ins›Map›-0 key converts to +0": true,
  "built-ins›Map›Map.prototype.size": true,
  "built-ins›Map›Map.prototype.delete": true,
  "built-ins›Map›Map.prototype.clear": true,
  "built-ins›Map›Map.prototype.forEach": true,
  "built-ins›Map›Map.prototype.keys": true,
  "built-ins›Map›Map.prototype.values": true,
  "built-ins›Map›Map.prototype.entries": true,
  "built-ins›Map›Map.prototype[Symbol.iterator]": true,
  "built-ins›Map›Map.prototype isn't an instance": true,
  "built-ins›Map›Map iterator prototype chain": true,
  "built-ins›Map›Map[Symbol.species]": "Cannot use 'in' operator to search for 'get' in undefined",
  "built-ins›Set›basic functionality": true,
  "built-ins›Set›constructor arguments": true,
  "built-ins›Set›constructor requires new": true,
  "built-ins›Set›constructor accepts null": true,
  "built-ins›Set›constructor invokes add": true,
  "built-ins›Set›iterator closing": false,
  "built-ins›Set›Set.prototype.add returns this": true,
  "built-ins›Set›-0 key converts to +0": true,
  "built-ins›Set›Set.prototype.size": true,
  "built-ins›Set›Set.prototype.delete": true,
  "built-ins›Set›Set.prototype.clear": true,
  "built-ins›Set›Set.prototype.forEach": true,
  "built-ins›Set›Set.prototype.keys": true,
  "built-ins›Set›Set.prototype.values": true,
  "built-ins›Set›Set.prototype.entries": true,
  "built-ins›Set›Set.prototype[Symbol.iterator]": true,
  "built-ins›Set›Set.prototype isn't an instance": true,
  "built-ins›Set›Set iterator prototype chain": true,
  "built-ins›Set›Set[Symbol.species]": "Cannot use 'in' operator to search for 'get' in undefined",
  "built-ins›WeakMap›basic functionality": true,
  "built-ins›WeakMap›constructor arguments": true,
  "built-ins›WeakMap›constructor requires new": true,
  "built-ins›WeakMap›constructor accepts null": true,
  "built-ins›WeakMap›constructor invokes set": true,
  "built-ins›WeakMap›frozen objects as keys": true,
  "built-ins›WeakMap›iterator closing": false,
  "built-ins›WeakMap›WeakMap.prototype.set returns this": true,
  "built-ins›WeakMap›WeakMap.prototype.delete": true,
  "built-ins›WeakMap›no WeakMap.prototype.clear method": true,
  "built-ins›WeakMap›.has, .get and .delete methods accept primitives": true,
  "built-ins›WeakMap›WeakMap.prototype isn't an instance": true,
  "built-ins›WeakSet›basic functionality": true,
  "built-ins›WeakSet›constructor arguments": true,
  "built-ins›WeakSet›constructor requires new": true,
  "built-ins›WeakSet›constructor accepts null": true,
  "built-ins›WeakSet›constructor invokes add": true,
  "built-ins›WeakSet›iterator closing": false,
  "built-ins›WeakSet›WeakSet.prototype.add returns this": true,
  "built-ins›WeakSet›WeakSet.prototype.delete": true,
  "built-ins›WeakSet›no WeakSet.prototype.clear method": true,
  "built-ins›WeakSet›.has and .delete methods accept primitives": true,
  "built-ins›WeakSet›WeakSet.prototype isn't an instance": true,
  "built-ins›Proxy›constructor requires new": "Proxy is not defined",
  "built-ins›Proxy›no \"prototype\" property": "Proxy is not defined",
  "built-ins›Proxy›\"get\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"get\" handler, instances of proxies": "Proxy is not defined",
  "built-ins›Proxy›\"get\" handler invariants": "Proxy is not defined",
  "built-ins›Proxy›\"set\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"set\" handler, instances of proxies": "Proxy is not defined",
  "built-ins›Proxy›\"set\" handler invariants": "Proxy is not defined",
  "built-ins›Proxy›\"has\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"has\" handler, instances of proxies": "Proxy is not defined",
  "built-ins›Proxy›\"has\" handler invariants": "Proxy is not defined",
  "built-ins›Proxy›\"deleteProperty\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"deleteProperty\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"getOwnPropertyDescriptor\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"getOwnPropertyDescriptor\" handler invariants": "Proxy is not defined",
  "built-ins›Proxy›\"defineProperty\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"defineProperty\" handler invariants": "Proxy is not defined",
  "built-ins›Proxy›\"getPrototypeOf\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"getPrototypeOf\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"setPrototypeOf\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"setPrototypeOf\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"isExtensible\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"isExtensible\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"preventExtensions\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"preventExtensions\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"ownKeys\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"ownKeys\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"apply\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"apply\" handler invariant": "Proxy is not defined",
  "built-ins›Proxy›\"construct\" handler": "Proxy is not defined",
  "built-ins›Proxy›\"construct\" handler invariants": "Proxy is not defined",
  "built-ins›Proxy›Proxy.revocable": "Proxy is not defined",
  "built-ins›Proxy›Array.isArray support": "Proxy is not defined",
  "built-ins›Proxy›JSON.stringify support": "Proxy is not defined",
  "built-ins›Reflect›Reflect.get": "Reflect is not defined",
  "built-ins›Reflect›Reflect.set": "Reflect is not defined",
  "built-ins›Reflect›Reflect.has": "Reflect is not defined",
  "built-ins›Reflect›Reflect.deleteProperty": "Reflect is not defined",
  "built-ins›Reflect›Reflect.getOwnPropertyDescriptor": "Reflect is not defined",
  "built-ins›Reflect›Reflect.defineProperty": "Reflect is not defined",
  "built-ins›Reflect›Reflect.getPrototypeOf": "Reflect is not defined",
  "built-ins›Reflect›Reflect.setPrototypeOf": "Reflect is not defined",
  "built-ins›Reflect›Reflect.isExtensible": "Reflect is not defined",
  "built-ins›Reflect›Reflect.preventExtensions": "Reflect is not defined",
  "built-ins›Reflect›Reflect.ownKeys, string keys": "Reflect is not defined",
  "built-ins›Reflect›Reflect.ownKeys, symbol keys": "Reflect is not defined",
  "built-ins›Reflect›Reflect.apply": "Reflect is not defined",
  "built-ins›Reflect›Reflect.construct": "Reflect is not defined",
  "built-ins›Reflect›Reflect.construct sets new.target meta property": "Unexpected token .",
  "built-ins›Reflect›Reflect.construct creates instance from newTarget argument": "Reflect is not defined",
  "built-ins›Promise›basic functionality": true,
  "built-ins›Promise›constructor requires new": true,
  "built-ins›Promise›Promise.prototype isn't an instance": true,
  "built-ins›Promise›Promise.all": true,
  "built-ins›Promise›Promise.all, generic iterables": true,
  "built-ins›Promise›Promise.race": true,
  "built-ins›Promise›Promise.race, generic iterables": true,
  "built-ins›Promise›Promise[Symbol.species]": "Cannot use 'in' operator to search for 'get' in undefined",
  "built-ins›Symbol›basic functionality": true,
  "built-ins›Symbol›typeof support": true,
  "built-ins›Symbol›symbol keys are hidden to pre-ES6 code": true,
  "built-ins›Symbol›Object.defineProperty support": true,
  "built-ins›Symbol›symbols inherit from Symbol.prototype": true,
  "built-ins›Symbol›cannot coerce to string or number": true,
  "built-ins›Symbol›can convert with String()": true,
  "built-ins›Symbol›new Symbol() throws": true,
  "built-ins›Symbol›Object(symbol)": false,
  "built-ins›Symbol›JSON.stringify ignores symbols": true,
  "built-ins›Symbol›global symbol registry": true,
  "built-ins›well-known symbols›Symbol.hasInstance": false,
  "built-ins›well-known symbols›Symbol.isConcatSpreadable": false,
  "built-ins›well-known symbols›Symbol.iterator, existence": true,
  "built-ins›well-known symbols›Symbol.iterator, arguments object": true,
  "built-ins›well-known symbols›Symbol.species, existence": false,
  "built-ins›well-known symbols›Symbol.species, Array.prototype.concat": false,
  "built-ins›well-known symbols›Symbol.species, Array.prototype.filter": false,
  "built-ins›well-known symbols›Symbol.species, Array.prototype.map": false,
  "built-ins›well-known symbols›Symbol.species, Array.prototype.slice": false,
  "built-ins›well-known symbols›Symbol.species, Array.prototype.splice": false,
  "built-ins›well-known symbols›Symbol.species, RegExp.prototype[Symbol.split]": false,
  "built-ins›well-known symbols›Symbol.species, Promise.prototype.then": false,
  "built-ins›well-known symbols›Symbol.replace": false,
  "built-ins›well-known symbols›Symbol.search": false,
  "built-ins›well-known symbols›Symbol.split": false,
  "built-ins›well-known symbols›Symbol.match": false,
  "built-ins›well-known symbols›Symbol.match, RegExp constructor": false,
  "built-ins›well-known symbols›Symbol.match, String.prototype.startsWith": "First argument to String.prototype.startsWith must not be a regular expression",
  "built-ins›well-known symbols›Symbol.match, String.prototype.endsWith": "First argument to String.prototype.endsWith must not be a regular expression",
  "built-ins›well-known symbols›Symbol.match, String.prototype.includes": "First argument to String.prototype.includes must not be a regular expression",
  "built-ins›well-known symbols›Symbol.toPrimitive": false,
  "built-ins›well-known symbols›Symbol.toStringTag": false,
  "built-ins›well-known symbols›Symbol.toStringTag affects existing built-ins": false,
  "built-ins›well-known symbols›Symbol.toStringTag, new built-ins": false,
  "built-ins›well-known symbols›Symbol.toStringTag, misc. built-ins": false,
  "built-ins›well-known symbols›Symbol.unscopables": true,
  "built-in extensions›Object static methods›Object.assign": true,
  "built-in extensions›Object static methods›Object.is": true,
  "built-in extensions›Object static methods›Object.getOwnPropertySymbols": true,
  "built-in extensions›Object static methods›Object.setPrototypeOf": true,
  "built-in extensions›function \"name\" property›function statements": true,
  "built-in extensions›function \"name\" property›function expressions": true,
  "built-in extensions›function \"name\" property›new Function": false,
  "built-in extensions›function \"name\" property›bound functions": true,
  "built-in extensions›function \"name\" property›variables (function)": false,
  "built-in extensions›function \"name\" property›object methods (function)": false,
  "built-in extensions›function \"name\" property›accessor properties": false,
  "built-in extensions›function \"name\" property›shorthand methods": true,
  "built-in extensions›function \"name\" property›shorthand methods (no lexical binding)": true,
  "built-in extensions›function \"name\" property›symbol-keyed methods": false,
  "built-in extensions›function \"name\" property›class statements": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-in extensions›function \"name\" property›class expressions": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-in extensions›function \"name\" property›variables (class)": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-in extensions›function \"name\" property›object methods (class)": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-in extensions›function \"name\" property›class prototype methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-in extensions›function \"name\" property›class static methods": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "built-in extensions›function \"name\" property›isn't writable, is configurable": true,
  "built-in extensions›String static methods›String.raw": true,
  "built-in extensions›String static methods›String.fromCodePoint": true,
  "built-in extensions›String.prototype methods›String.prototype.codePointAt": true,
  "built-in extensions›String.prototype methods›String.prototype.normalize": true,
  "built-in extensions›String.prototype methods›String.prototype.repeat": true,
  "built-in extensions›String.prototype methods›String.prototype.startsWith": true,
  "built-in extensions›String.prototype methods›String.prototype.endsWith": true,
  "built-in extensions›String.prototype methods›String.prototype.includes": true,
  "built-in extensions›String.prototype methods›String.prototype[Symbol.iterator]": true,
  "built-in extensions›String.prototype methods›String iterator prototype chain": true,
  "built-in extensions›RegExp.prototype properties›RegExp.prototype.flags": false,
  "built-in extensions›RegExp.prototype properties›RegExp.prototype[Symbol.match]": false,
  "built-in extensions›RegExp.prototype properties›RegExp.prototype[Symbol.replace]": false,
  "built-in extensions›RegExp.prototype properties›RegExp.prototype[Symbol.split]": false,
  "built-in extensions›RegExp.prototype properties›RegExp.prototype[Symbol.search]": false,
  "built-in extensions›RegExp.prototype properties›RegExp[Symbol.species]": "Cannot use 'in' operator to search for 'get' in undefined",
  "built-in extensions›Array static methods›Array.from, array-like objects": true,
  "built-in extensions›Array static methods›Array.from, generator instances": true,
  "built-in extensions›Array static methods›Array.from, generic iterables": true,
  "built-in extensions›Array static methods›Array.from, instances of generic iterables": true,
  "built-in extensions›Array static methods›Array.from map function, array-like objects": true,
  "built-in extensions›Array static methods›Array.from map function, generator instances": true,
  "built-in extensions›Array static methods›Array.from map function, generic iterables": true,
  "built-in extensions›Array static methods›Array.from map function, instances of iterables": true,
  "built-in extensions›Array static methods›Array.from, iterator closing": false,
  "built-in extensions›Array static methods›Array.of": true,
  "built-in extensions›Array static methods›Array[Symbol.species]": "Cannot use 'in' operator to search for 'get' in undefined",
  "built-in extensions›Array.prototype methods›Array.prototype.copyWithin": true,
  "built-in extensions›Array.prototype methods›Array.prototype.find": true,
  "built-in extensions›Array.prototype methods›Array.prototype.findIndex": true,
  "built-in extensions›Array.prototype methods›Array.prototype.fill": true,
  "built-in extensions›Array.prototype methods›Array.prototype.keys": true,
  "built-in extensions›Array.prototype methods›Array.prototype.values": false,
  "built-in extensions›Array.prototype methods›Array.prototype.entries": true,
  "built-in extensions›Array.prototype methods›Array.prototype[Symbol.iterator]": true,
  "built-in extensions›Array.prototype methods›Array iterator prototype chain": false,
  "built-in extensions›Array.prototype methods›Array.prototype[Symbol.unscopables]": true,
  "built-in extensions›Number properties›Number.isFinite": true,
  "built-in extensions›Number properties›Number.isInteger": true,
  "built-in extensions›Number properties›Number.isSafeInteger": true,
  "built-in extensions›Number properties›Number.isNaN": true,
  "built-in extensions›Number properties›Number.EPSILON": true,
  "built-in extensions›Number properties›Number.MIN_SAFE_INTEGER": true,
  "built-in extensions›Number properties›Number.MAX_SAFE_INTEGER": true,
  "built-in extensions›Math methods›Math.clz32": true,
  "built-in extensions›Math methods›Math.imul": true,
  "built-in extensions›Math methods›Math.sign": true,
  "built-in extensions›Math methods›Math.log10": true,
  "built-in extensions›Math methods›Math.log2": true,
  "built-in extensions›Math methods›Math.log1p": true,
  "built-in extensions›Math methods›Math.expm1": true,
  "built-in extensions›Math methods›Math.cosh": true,
  "built-in extensions›Math methods›Math.sinh": true,
  "built-in extensions›Math methods›Math.tanh": true,
  "built-in extensions›Math methods›Math.acosh": true,
  "built-in extensions›Math methods›Math.asinh": true,
  "built-in extensions›Math methods›Math.atanh": true,
  "built-in extensions›Math methods›Math.trunc": true,
  "built-in extensions›Math methods›Math.fround": true,
  "built-in extensions›Math methods›Math.cbrt": true,
  "built-in extensions›Math methods›Math.hypot": true,
  "built-in extensions›Date.prototype[Symbol.toPrimitive]": "Cannot read property 'call' of undefined",
  "subclassing›Array is subclassable›length property (accessing)": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›length property (setting)": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›correct prototype chain": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.isArray support": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.prototype.concat": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.prototype.filter": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.prototype.map": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.prototype.slice": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.prototype.splice": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.from": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Array is subclassable›Array.of": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›RegExp is subclassable›basic functionality": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›RegExp is subclassable›correct prototype chain": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›RegExp is subclassable›RegExp.prototype.exec": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›RegExp is subclassable›RegExp.prototype.test": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Function is subclassable›can be called": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Function is subclassable›correct prototype chain": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Function is subclassable›can be used with \"new\"": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Function is subclassable›Function.prototype.call": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Function is subclassable›Function.prototype.apply": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Function is subclassable›Function.prototype.bind": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Promise is subclassable›basic functionality": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Promise is subclassable›correct prototype chain": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Promise is subclassable›Promise.all": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›Promise is subclassable›Promise.race": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›miscellaneous subclassables›Boolean is subclassable": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›miscellaneous subclassables›Number is subclassable": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›miscellaneous subclassables›String is subclassable": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›miscellaneous subclassables›Map is subclassable": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "subclassing›miscellaneous subclassables›Set is subclassable": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "misc›prototype of bound functions›basic functions": false,
  "misc›prototype of bound functions›generator functions": false,
  "misc›prototype of bound functions›arrow functions": false,
  "misc›prototype of bound functions›classes": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "misc›prototype of bound functions›subclasses": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "misc›Proxy, internal 'get' calls›ToPrimitive": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›CreateListFromArrayLike": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›instanceof operator": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›HasBinding": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›CreateDynamicFunction": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›ClassDefinitionEvaluation": "Block-scoped declarations (let, const, function, class) not yet supported outside strict mode",
  "misc›Proxy, internal 'get' calls›IteratorComplete, IteratorValue": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›ToPropertyDescriptor": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Object.assign": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Object.defineProperties": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Function.prototype.bind": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Error.prototype.toString": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›String.raw": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp constructor": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype.flags": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype.test": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype.toString": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype[Symbol.match]": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype[Symbol.replace]": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype[Symbol.search]": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›RegExp.prototype[Symbol.split]": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.from": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype.concat": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype iteration methods": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype.pop": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype.reverse": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype.shift": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype.splice": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Array.prototype.toString": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›JSON.stringify": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Promise resolve functions": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›String.prototype.match": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›String.prototype.replace": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›String.prototype.search": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›String.prototype.split": "Proxy is not defined",
  "misc›Proxy, internal 'get' calls›Date.prototype.toJSON": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Object.assign": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.from": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.of": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.copyWithin": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.fill": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.pop": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.push": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.reverse": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.shift": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.splice": "Proxy is not defined",
  "misc›Proxy, internal 'set' calls›Array.prototype.unshift": "Proxy is not defined",
  "misc›Proxy, internal 'defineProperty' calls›[[Set]]": "Proxy is not defined",
  "misc›Proxy, internal 'defineProperty' calls›SetIntegrityLevel": "Proxy is not defined",
  "misc›Proxy, internal 'deleteProperty' calls›Array.prototype.copyWithin": "Proxy is not defined",
  "misc›Proxy, internal 'deleteProperty' calls›Array.prototype.pop": "Proxy is not defined",
  "misc›Proxy, internal 'deleteProperty' calls›Array.prototype.reverse": "Proxy is not defined",
  "misc›Proxy, internal 'deleteProperty' calls›Array.prototype.shift": "Proxy is not defined",
  "misc›Proxy, internal 'deleteProperty' calls›Array.prototype.splice": "Proxy is not defined",
  "misc›Proxy, internal 'deleteProperty' calls›Array.prototype.unshift": "Proxy is not defined",
  "misc›Proxy, internal 'getOwnPropertyDescriptor' calls›[[Set]]": "Proxy is not defined",
  "misc›Proxy, internal 'getOwnPropertyDescriptor' calls›Object.assign": "Proxy is not defined",
  "misc›Proxy, internal 'getOwnPropertyDescriptor' calls›Object.prototype.hasOwnProperty": "Proxy is not defined",
  "misc›Proxy, internal 'getOwnPropertyDescriptor' calls›Function.prototype.bind": "Proxy is not defined",
  "misc›Proxy, internal 'ownKeys' calls›SetIntegrityLevel": "Proxy is not defined",
  "misc›Proxy, internal 'ownKeys' calls›TestIntegrityLevel": "Proxy is not defined",
  "misc›Proxy, internal 'ownKeys' calls›SerializeJSONObject": "Proxy is not defined",
  "misc›Object static methods accept primitives›Object.getPrototypeOf": true,
  "misc›Object static methods accept primitives›Object.getOwnPropertyDescriptor": true,
  "misc›Object static methods accept primitives›Object.getOwnPropertyNames": true,
  "misc›Object static methods accept primitives›Object.seal": true,
  "misc›Object static methods accept primitives›Object.freeze": true,
  "misc›Object static methods accept primitives›Object.preventExtensions": true,
  "misc›Object static methods accept primitives›Object.isSealed": true,
  "misc›Object static methods accept primitives›Object.isFrozen": true,
  "misc›Object static methods accept primitives›Object.isExtensible": true,
  "misc›Object static methods accept primitives›Object.keys": true,
  "misc›own property order›Object.keys": true,
  "misc›own property order›Object.getOwnPropertyNames": false,
  "misc›own property order›Object.assign": false,
  "misc›own property order›JSON.stringify": true,
  "misc›own property order›JSON.parse": true,
  "misc›own property order›Reflect.ownKeys, string key order": "Reflect is not defined",
  "misc›own property order›Reflect.ownKeys, symbol key order": "Reflect is not defined",
  "misc›miscellaneous›no escaped reserved words as identifiers": false,
  "misc›miscellaneous›duplicate property names in strict mode": true,
  "misc›miscellaneous›no semicolon needed after do-while": true,
  "misc›miscellaneous›no assignments allowed in for-in head": true,
  "misc›miscellaneous›accessors aren't constructors": true,
  "misc›miscellaneous›Invalid Date": true,
  "misc›miscellaneous›RegExp constructor can alter flags": "Cannot supply flags when constructing one RegExp from another",
  "misc›miscellaneous›RegExp.prototype.toString generic and uses \"flags\" property": "Method RegExp.prototype.toString called on incompatible receiver #<Object>",
  "misc›miscellaneous›built-in prototypes are not instances": false,
  "misc›miscellaneous›function 'length' is configurable": true,
  "annex b›non-strict function semantics›hoisted block-level function declaration": false,
  "annex b›non-strict function semantics›labeled function statements": true,
  "annex b›non-strict function semantics›function statements in if-statement clauses": true,
  "annex b›__proto__ in object literals›basic support": true,
  "annex b›__proto__ in object literals›multiple __proto__ is an error": true,
  "annex b›__proto__ in object literals›not a computed property": true,
  "annex b›__proto__ in object literals›not a shorthand property": true,
  "annex b›__proto__ in object literals›not a shorthand method": true,
  "annex b›Object.prototype.__proto__›get prototype": true,
  "annex b›Object.prototype.__proto__›set prototype": true,
  "annex b›Object.prototype.__proto__›absent from Object.create(null)": true,
  "annex b›Object.prototype.__proto__›present in hasOwnProperty()": true,
  "annex b›Object.prototype.__proto__›correct property descriptor": true,
  "annex b›Object.prototype.__proto__›present in Object.getOwnPropertyNames()": true,
  "annex b›String.prototype HTML methods›existence": true,
  "annex b›String.prototype HTML methods›tags' names are lowercase": true,
  "annex b›String.prototype HTML methods›quotes in arguments are escaped": true,
  "annex b›RegExp.prototype.compile": true,
  "annex b›RegExp syntax extensions›hyphens in character sets": true,
  "annex b›RegExp syntax extensions›invalid character escapes": true,
  "annex b›RegExp syntax extensions›invalid control-character escapes": true,
  "annex b›RegExp syntax extensions›invalid Unicode escapes": true,
  "annex b›RegExp syntax extensions›invalid hexadecimal escapes": true,
  "annex b›RegExp syntax extensions›incomplete patterns and quantifiers": true,
  "annex b›RegExp syntax extensions›octal escape sequences": true,
  "annex b›RegExp syntax extensions›invalid backreferences become octal escapes": true,
  "annex b›HTML-style comments": true
}